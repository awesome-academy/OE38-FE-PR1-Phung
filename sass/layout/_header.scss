@use '../base/variable' as *;
@use '../abstract/mixin' as mixin;
@use '../base/custom' as bootstrap;

.header-nav {
  color: $gray-700;
  background-color: $white;
  
  @include bootstrap.media-breakpoint-down(lg) {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;

    text-transform: uppercase;
    // font-weight: map-get($map: $font-weight, $key: medium);
    box-shadow: $box-shadow-sm;
  }
  
  &__logo {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    
    height: 3.5rem;
    display: none;
    
    @include bootstrap.media-breakpoint-down(lg) {
      display: block;
    }

    img {
      height: 100%;
      width: auto;
    }
  }

  &__list-box {
    padding-right: 12px;
    padding-left: 12px;
    margin-right: -12px;
    margin-left: -12px;
    
    @include bootstrap.media-breakpoint-down(lg) {
      overflow-y: scroll;
      max-height: 80vh;
    }
  }

  &__list {
    font-size: 0.875rem;

    @include bootstrap.media-breakpoint-down(lg) {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
    }
    
    li {

      @include bootstrap.media-breakpoint-down(lg) {
        display: block;
        width: 100%;
      }
    }

    a {
      white-space: nowrap;
      letter-spacing: 0.05rem;
      
      @include bootstrap.media-breakpoint-down(lg) {
        padding-top: 0.7rem;
        padding-bottom: 0.7rem;
      }

      &:hover:not(.active) span {
        text-decoration: underline;
      }
    }
  }
  // HEADER LIGHT OPACITY
  &--opacity {
    background-color: rgba($color: $gray-400, $alpha: 0.6);
  }
  
  &--opacity &__list-box {
    color: $white;
    background-color: initial;
    
    @include bootstrap.media-breakpoint-down(lg) {
      color: inherit;
      background-color: $white;
    }
    
    li {

    }
    
    a {
      color: inherit !important;

      &:hover {
        color: $secondary !important;
      }

      &.active {
        color: $secondary !important;
      }
    }
  }
}
